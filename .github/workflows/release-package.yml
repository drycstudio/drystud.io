name: Release Electron Titlebar Package

on:
  release:
    types:
      - created
  # push:
  #     tags:
  #         - "*"

jobs:
  build-ci:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Enable Corepack before setting up Node
        run: corepack enable

        # Setup .npmrc file to publish to GitHub Packages
      - name: Setting up NodeJS and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Installing Packageds
        uses: borales/actions-yarn@v5
        with:
          cmd: install # will run `yarn install --preferoffline` command

      - name: ✏️ Checking for lint errors
        uses: borales/actions-yarn@v5
        with:
          cmd: turbo run lint # will run `yarn lint` command

      - name: 🧪 Testing the app
        uses: borales/actions-yarn@v5
        with:
          cmd: turbo run test # will run `yarn test` command

      - name: 💻 Building production bundle
        uses: borales/actions-yarn@v5
        with:
          cmd: turbo run build # will run `yarn build:prod` command

    #   - name: 🔼 Upload artifact for deployment job
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: libs
    #       path: ./

  publish-npm:
    needs: build-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Enable Corepack before setting up Node
        run: corepack enable

      #   - name: 📥 Download artifact from build job
      #     uses: actions/download-artifact@v4
      #     with:
      #       name: libs

      #   - name: 📂 Checking app directory (after Donloading artifact)
      #     run: |
      #       ls -la

      - name: 📦 Publishing NPM Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
          scope: '@drycstud.io'
        env:
          NODE_AUTH_TOKEN: ${{secrets.AUTH_NPM_TOKEN}}

      - name: 📦 Installing Packageds
        uses: borales/actions-yarn@v5
        with:
          cmd: install # will run `yarn install --preferoffline` command

      - name: 💻 Building production bundle
        uses: borales/actions-yarn@v5
        with:
          cmd: publish-packages # will run `yarn build:prod` command

  publish-gpr:
    needs: build-ci
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Enable Corepack before setting up Node
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
          registry-url: https://npm.pkg.github.com/
          scope: '@drycstud.io'

      - name: 📦 Installing Packageds
        uses: borales/actions-yarn@v5
        with:
          cmd: install # will run `yarn ci` command

      - name: 🖥️ Publishing package
        uses: borales/actions-yarn@v5
        with:
          cmd: publish-packages # will run `yarn build:prod` command
        env:
          NODE_AUTH_TOKEN: ${{secrets.AUTH_NPM_TOKEN}}
